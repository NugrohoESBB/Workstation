code 2:

<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <title>Perhitungan Panel Surya</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .hidden-table { display: none; }
    .table th, .table td { vertical-align: middle; text-align: center; }
    .tabel-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1.5rem; }
  </style>
</head>
<body class="bg-light">

  <div class="container py-5">
    <h2 class="mb-4 text-center">Simulasi Perhitungan Panel Surya</h2>

    <!-- FORM -->
    <div class="card shadow-sm mb-4">
      <div class="card-body">
        <form id="panelForm" class="row g-3">
          <div class="col-md-4">
            <label for="lokasiSelect" class="form-label">Pilih Lokasi</label>
            <select id="lokasiSelect" class="form-select" required>
              <option value="">-- Pilih Lokasi --</option>
            </select>
          </div>
          <div class="col-md-4">
            <label for="konfigurasi" class="form-label">Konfigurasi Panel</label>
            <select id="konfigurasi" class="form-select" required>
              <option value="">-- Pilih Konfigurasi --</option>
              <option value="off-grid">Off-grid</option>
              <option value="hybrid">Hybrid</option>
              <option value="on-grid">On-grid</option>
            </select>
          </div>
          <div class="col-md-4">
            <label for="kebutuhan" class="form-label">Kebutuhan Energi Harian (kWh)</label>
            <input type="number" class="form-control" id="kebutuhan" step="0.1" min="0.1" required>
          </div>
          <div class="col-12 text-end mt-3">
            <button type="submit" class="btn btn-primary px-4">Hitung</button>
          </div>
        </form>
      </div>
    </div>

    <!-- HASIL PERHITUNGAN -->
      <div id="hasil" class="mb-4"></div>

    <!-- TABELS -->
    <div id="tabelContainer" class="tabel-grid mb-4">
      <div id="tabelPanel" class="hidden-table"></div>
      <div id="tabelLuas" class="hidden-table"></div>
    </div>

    <div id="tabelContainer" class="tabel-grid mb-4">
      <div id="tabelJumlahBaterai" class="hidden-table"></div>
    </div>
    
    <div id="tabelContainer" class="tabel-grid mb-4">
      <div id="tabelBaterai" class="hidden-table"></div>
      <div id="tabelInverter" class="hidden-table"></div>
    </div>

  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    let data = [];

    fetch('data-irradiasi.json')
    .then(res => res.json())
    .then(json => {
      data = json;
      const select = document.getElementById('lokasiSelect');
      data.forEach(item => {
        const option = document.createElement('option');
        option.value = item.kab_kota;
        option.textContent = `${item.kab_kota} (${item.provinsi})`;
        select.appendChild(option);
      });
    })
    .catch(err => console.error("Gagal ambil data:", err));

    document.getElementById('panelForm').addEventListener('submit', function(e) {
      e.preventDefault();

      const kabKota = document.getElementById('lokasiSelect').value;
      const konfigurasi = document.getElementById('konfigurasi').value;
      const kebutuhan = parseFloat(document.getElementById('kebutuhan').value);

      const lokasi = data.find(item => item.kab_kota === kabKota);

      if (lokasi && kebutuhan && konfigurasi) {
        const irradiasiHarian = Math.round(lokasi.irradiasi_bulanan / 30);
        const efisiensi = konfigurasi === 'off-grid' ? 1 : konfigurasi === 'hybrid' ? 0.8 : 0.6;

        const pembagi = irradiasiHarian * 0.66;
        const wp = Math.ceil((kebutuhan * efisiensi / pembagi) * 1000);

        document.getElementById('hasil').innerHTML = `
          <div class="alert alert-success shadow-sm">
            <h5 class="mb-2">Hasil Perhitungan:</h5>
            <ul class="mb-0">
              <li><strong>Irradiasi Bulanan:</strong> ${lokasi.irradiasi_bulanan} kWh/m²</li>
              <li><strong>Irradiasi Harian:</strong> ${irradiasiHarian} kWh/m²</li>
              <li><strong>Orientasi:</strong> ${lokasi.orientasi || '-'}</li>
              <li><strong>Kemiringan:</strong> ${lokasi.kemiringan || '-'}</li>
              <li><strong>Kapasitas Panel yang Dibutuhkan:</strong> <u>${wp} WP</u></li>
            </ul>
          </div>
        `;

        const jenisPanel = ['Poli', 'Mono', 'Bifacial'];
        const wpPanelOptions = [100, 200, 300, 500, 700];
        const luasPanelValues = {
          'Poli': { 100: 0.7324, 200: 1.4701, 300: 1.6269 },
          'Mono': { 100: 0.648, 200: 1.2766, 500: 2.2092, 700: 2.6129 },
          'Bifacial': { 100: 0.715, 200: 1.365, 500: 3.094, 700: 4.368 }
        };

        function hitungJumlahPanel(jenis, wpPanel) {
          const excluded = (jenis === 'Poli' && (wpPanel === 500 || wpPanel === 700)) ||
          (jenis === 'Mono' && wpPanel === 300) ||
          (jenis === 'Bifacial' && wpPanel === 300);
          if (excluded) return 'X';
          const faktor = jenis === 'Poli' ? 0.8 : jenis === 'Mono' ? 1 : 1.2;
          return Math.ceil(wp / (wpPanel * faktor));
        }

        function hitungLuasPanel(jenis, wpPanel) {
          const jumlah = hitungJumlahPanel(jenis, wpPanel);
          const luas = luasPanelValues[jenis]?.[wpPanel];
          if (jumlah === 'X' || !luas) return 'X';
          return (jumlah * luas).toFixed(2) + ' m²';
        }

        function buatTabel(id, title, headers, dataRows) {
          let html = `<div class="card shadow-sm"><div class="card-header bg-primary text-white"><strong>${title}</strong></div><div class="card-body p-0"><table class="table table-bordered table-hover mb-0"><thead><tr><th>${headers[0]}</th>`;
          headers.slice(1).forEach(h => html += `<th>${h}</th>`);
          html += '</tr></thead><tbody>';
          dataRows.forEach(row => {
            html += `<tr><td><strong>${row[0]}</strong></td>`;
            row.slice(1).forEach(cell => html += `<td>${cell}</td>`);
            html += '</tr>';
          });
          html += '</tbody></table></div></div>';
          const el = document.getElementById(id);
          el.innerHTML = html;
          el.classList.remove('hidden-table');
        }

        // Tabel Jumlah Panel
        const jumlahPanelRows = jenisPanel.map(jenis => [jenis, ...wpPanelOptions.map(wp => hitungJumlahPanel(jenis, wp))]);
        buatTabel('tabelPanel', 'Jumlah Panel', ['Jenis \\ WP', ...wpPanelOptions], jumlahPanelRows);

        // Tabel Luas Panel
        const luasPanelRows = jenisPanel.map(jenis => [jenis, ...wpPanelOptions.map(wp => hitungLuasPanel(jenis, wp))]);
        buatTabel('tabelLuas', 'Luas Panel', ['Jenis \\ WP', ...wpPanelOptions], luasPanelRows);

        // Tabel Kapasitas Baterai
        const kapasitasBaterai = Math.ceil((wp / 0.95) * 2);
        buatTabel('tabelBaterai', 'Kapasitas Baterai', ['Kapasitas (Wh)'], [[kapasitasBaterai]]);

        // Tabel Jumlah Baterai
        const voltOptions = [12, 24, 48];
        const ahOptions = [50, 100, 200, 300, 500];
        const jumlahBateraiRows = voltOptions.map(v => [v, ...ahOptions.map(ah => Math.ceil(kapasitasBaterai / (v * ah)))]);
        buatTabel('tabelJumlahBaterai', 'Jumlah Baterai', ['V/Ah', ...ahOptions], jumlahBateraiRows);

        // Tabel Kapasitas Inverter
        const kapasitasInverter = Math.ceil((wp * 2) / 1000);
        buatTabel('tabelInverter', 'Kapasitas Inverter', ['Kapasitas (kWh)'], [[kapasitasInverter]]);
      }
    });
  </script>
</body>
</html>
